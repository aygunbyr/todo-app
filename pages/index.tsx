import Head from "next/head";
import { Inter } from "next/font/google";
import TodoList from "@/components/TodoList";
import { useEffect, useState } from "react";
import { ITodo } from "@/types/todo";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [completed, setCompleted] = useState<number>(0);
  const [content, setContent] = useState<string>("");

  const [todos, setTodos] = useState<ITodo[]>([
    {
      id: 5,
      content: "Learn JavaScript",
      isCompleted: false,
    },
    {
      id: 18,
      content: "Learn React",
      isCompleted: false,
    },
    {
      id: 22,
      content: "Have a life!",
      isCompleted: false,
    },
  ]);

  useEffect(() => {
    let completed = 0;
    todos.forEach((todo) => (todo.isCompleted ? null : completed++));
    setCompleted(completed);
  }, [todos]);

  const changeStatus = (todoId: number) => {
    const newTodos = todos.map((todo) => {
      // All except given remains the same
      if (todo.id !== todoId) return todo;

      // Change given todo status
      return { ...todo, isCompleted: !todo.isCompleted };
    });

    // Update todos
    setTodos(newTodos);
  };

  const handleSubmit = (event: React.SyntheticEvent) => {
    // Prevent default HTML Form Submit action
    event.preventDefault();

    // If input is empty, abort submit process
    if (content.length < 1) return;

    // Create new todo object with random ID and initially not completed
    const newTodo = {
      id: Math.floor(Math.random() * 428374324),
      content: content,
      isCompleted: false,
    };

    // Add todo to todos array
    setTodos([...todos, newTodo]);

    // Clear input
    setContent("");
  };

  // Bind content state and todo input
  const onInputChange = (event: React.FormEvent<HTMLInputElement>): void => {
    setContent(event.currentTarget.value);
  };

  return (
    <>
      <Head>
        <title>Todo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="todoapp">
        <header className="header">
          <h1>todos</h1>
          <form onSubmit={handleSubmit}>
            <input
              className="new-todo"
              placeholder="What needs to be done?"
              onChange={onInputChange}
              value={content}
              autoFocus
            />
          </form>
        </header>

        <section className="main">
          <input className="toggle-all" type="checkbox" />
          <label htmlFor="toggle-all">Mark all as complete</label>

          <TodoList todos={todos} changeStatus={changeStatus} />
        </section>

        <footer className="footer">
          <span className="todo-count">
            <strong>{completed} </strong>
            items left
          </span>

          <ul className="filters">
            <li>
              <a href="#/" className="selected">
                All
              </a>
            </li>
            <li>
              <a href="#/">Active</a>
            </li>
            <li>
              <a href="#/">Completed</a>
            </li>
          </ul>

          <button className="clear-completed">Clear completed</button>
        </footer>
      </section>

      <footer className="info">
        <p>Click to edit a todo</p>
        <p>
          Created by <a href="https://d12n.me/">Dmitry Sharabin</a>
        </p>
        <p>
          Part of <a href="http://todomvc.com">TodoMVC</a>
        </p>
      </footer>
    </>
  );
}
